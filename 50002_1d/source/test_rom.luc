module test_rom (
    input test_case[$clog2(7)], // $clog2(7) = 3
    input index[$clog2(24)], // $clog2(24) = 5
    output alufn[6],
    output a[8],
    output b[8],
    output out[8],
    output z,
    output v,
    output n
  ) {

  always {
    // test_cases
    // 000: add & sub
    // 001: compare
    // 010: boolean
    // 011: shift left
    // 100: shift right
    // 110: shift right signed
    // 111: multiply
    // there will be 24 tests for each cases, counting using the 5-bit index
    case(c{test_case,index}){
      //add & sub
      8b00000000: //test_case0, index 0, add
        alufn = 6b0;
        a = 8b00101001;
        b = 8b01000010;
        out = 8b01101011;
        z = 0;
        v = 0;
        n = 0;
      8b00000001: //test_case0, index 1, add
        alufn = 6b0;
        a = 8b11111111;
        b = 8b11111111;
        out = 8b11111110;
        z = 0;
        v = 0;
        n = 1;
      8b00000010: //test_case0, index 2, add
        alufn = 6b0;
        a = 8b10000000;
        b = 8b11111111;
        out = 8b01111111;
        z = 0;
        v = 1;
        n = 0;
      8b00000011: //test_case0, index 3, add
        alufn = 6b0;
        a = 8b01111111;
        b = 8b00000001;
        out = 8b10000000;
        z = 0;
        v = 1;
        n = 1;
      8b00000100: //test_case0, index 4, add
        alufn = 6b0;
        a = 8b00000001;
        b = 8b11111111;
        out = 8b00000000;
        z = 1;
        v = 0;
        n = 0;
      8b00000101: //test_case0, index 5, add
        alufn = 6b0;
        a = 8b10000000;
        b = 8b10000000;
        out = 8b00000000;
        z = 1;
        v = 1;
        n = 0;
      8b00000110: //test_case0, index 6, add
        alufn = 6b0;
        a = 8b10000000;
        b = 8b01111111;
        out = 8b11111111;
        z = 0;
        v = 0;
        n = 1;
      8b00000111: //test_case0, index 7, add
        alufn = 6b0;
        a = 8b10000000;
        b = 8b10010110;
        out = 8b00010110;
        z = 0;
        v = 1;
        n = 0;
      8b00001000: //test_case0, index8, add
        alufn = 6b0;
        a = 8b00000000;
        b = 8b00000000;
        out = 8b00000000;
        z = 1;
        v = 0;
        n = 0;
      8b00001001: //test_case0, index 9, add
        alufn = 6b0;
        a = 8b10001001;
        b = 8b00100101;
        out = 8b10101110;
        z = 0;
        v = 0;
        n = 1;
      8b00001010: //test_case0, index 10, add
        alufn = 6b0;
        a = 8b10110101;
        b = 8b11101111;
        out = 8b10100100;
        z = 0;
        v = 0;
        n = 1;
      8b00001011: //test_case0, index 11, add
        alufn = 6b0;
        a = 8b10000000;
        b = 8b00101011;
        out = 8b10101011;
        z = 0;
        v = 0;
        n = 1;
      8b00001100: //test_case0, index 12, add
        alufn = 6b1;
        a = 8b00101001;
        b = 8b10111110;
        out = 8b01101011;
        z = 0;
        v = 0;
        n = 0;
      8b00001101: //test_case0, index 13, sub
        alufn = 6b1;
        a = 8b11111111;
        b = 8b00000001;
        out = 8b11111110;
        z = 0;
        v = 0;
        n = 1;
      8b00001110: //test_case0, index 14, sub
        alufn = 6b1;
        a = 8b10000000;
        b = 8b00000001;
        out = 8b01111111;
        z = 0;
        v = 1;
        n = 0;
      8b00001111: //test_case0, index 15, sub
        alufn = 6b1;
        a = 8b01111111;
        b = 8b11111111;
        out = 8b10000000;
        z = 0;
        v = 1;
        n = 1;
      8b00010000: //test_case0, index 16, sub
        alufn = 6b1;
        a = 8b00000001;
        b = 8b00000001;
        out = 8b00000000;
        z = 1;
        v = 0;
        n = 0;
      8b00010001: //test_case0, index 17, sub
        alufn = 6b1;
        a = 8b10000000;
        b = 8b10000000;
        out = 8b00000000;
        z = 1;
        v = 0;
        n = 0;
      8b00010010: //test_case0, index 18, sub
        alufn = 6b1;
        a = 8b10000000;
        b = 8b01111111;
        out = 8b00000001;
        z = 0;
        v = 1;
        n = 0;
      8b00010011: //test_case0, index 19, sub
        alufn = 6b1;
        a = 8b00000000;
        b = 8b00000000;
        out = 8b00000000;
        z = 1;
        v = 0;
        n = 0;
      8b00010100: //test_case0, index 20, sub
        alufn = 6b1;
        a = 8b11100001;
        b = 8b10011100;
        out = 8b01000101;
        z = 0;
        v = 0;
        n = 0;
      8b00010101: //test_case0, index 21, sub
        alufn = 6b1;
        a = 8b00110110;
        b = 8b01000010;
        out = 8b11110100;
        z = 0;
        v = 0;
        n = 1;
      8b00010110: //test_case0, index 22, sub
        alufn = 6b1;
        a = 8b10000000;
        b = 8b00100110;
        out = 8b01011010;
        z = 0;
        v = 1;
        n = 0;
      8b00010111: //test_case0, index 23, sub
        alufn = 6b1;
        a = 8b10000000;
        b = 8b10011011;
        out = 8b11100101;
        z = 0;
        v = 0;
        n = 1;
      default:
        alufn = 6b000000;
        a = 8b00000000;
        b = 8b00000000;
        out = 8b00000000;
        z = 1;
        v = 0;
        n = 0;
    }
  }
}
